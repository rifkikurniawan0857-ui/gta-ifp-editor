name: Build Android APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.8'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        # Install system build tools and dependencies
        sudo apt-get install -y build-essential libffi-dev libssl-dev libxml2-dev libxslt1-dev libjpeg8-dev zlib1g-dev git wget unzip
        # Additional packages needed for Android build
        sudo apt-get install -y libc6-dev-i386 lib32stdc++6 lib32z1
        # Install Android build tools
        sudo apt-get install -y android-sdk android-sdk-platform-tools android-sdk-build-tools
        
    - name: Install Python dependencies
      run: |
        pip install --upgrade pip
        pip install Cython==0.29.30
        pip install pygame
        pip install kivy==2.1.0
        pip install buildozer==1.5.0
        
    - name: Prepare buildozer.spec
      run: |
        cd ${{ github.workspace }}
        # Ensure SDK license acceptance is set in buildozer.spec
        if grep -q "android.accept_sdk_license" buildozer.spec; then
          sed -i 's/android.accept_sdk_license = .*/android.accept_sdk_license = True/g' buildozer.spec
        else
          sed -i '/^\[app@debug\]/a android.accept_sdk_license = True' buildozer.spec
        fi
        
    - name: Clean previous builds
      run: |
        cd ${{ github.workspace }}
        rm -rf .buildozer/android/platform/build-*
        rm -rf .buildozer/android/platform/android-*
        
    - name: Setup Android Environment
      run: |
        # Set environment variables
        echo "ANDROID_HOME=/usr/lib/android-sdk" >> $GITHUB_ENV
        echo "PATH=$PATH:/usr/lib/android-sdk/tools:/usr/lib/android-sdk/tools/bin:/usr/lib/android-sdk/platform-tools:/usr/lib/android-sdk/build-tools" >> $GITHUB_ENV
        # Accept Android SDK licenses
        echo "y" | sudo sdkmanager --licenses || true
        
    - name: Build APK
      run: |
        cd ${{ github.workspace }}
        # Let buildozer install SDK automatically with specific NDK
        buildozer android debug --verbose
        
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: gta-ifp-editor-apk
        path: bin/*.apk
