name: Build Android APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.8'
        
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libffi-dev libssl-dev libxml2-dev libxslt1-dev libjpeg8-dev zlib1g-dev git wget unzip
        pip install --upgrade pip
        pip install Cython==0.29.30
        pip install pygame
        pip install kivy==2.1.0
        pip install buildozer==1.5.0
        
    - name: Setup Android SDK
      run: |
        mkdir -p /home/runner/.buildozer/android/platform
        cd /home/runner/.buildozer/android/platform
        wget https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip
        unzip commandlinetools-linux-8512546_latest.zip
        mkdir -p android-sdk/cmdline-tools
        mv cmdline-tools android-sdk/cmdline-tools/latest
        export ANDROID_HOME=/home/runner/.buildozer/android/platform/android-sdk
        export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$PATH
        # Accept licenses
        yes | sdkmanager --licenses || true
        
    - name: Initialize Buildozer
      run: |
        cd ${{ github.workspace }}
        buildozer init
        # Update buildozer.spec to accept SDK licenses
        sed -i 's/android.accept_sdk_license = False/android.accept_sdk_license = True/g' buildozer.spec || echo "android.accept_sdk_license = True" >> buildozer.spec
        
    - name: Build APK
      run: |
        cd ${{ github.workspace }}
        buildozer android debug
        
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: gta-ifp-editor-apk
        path: bin/*.apk
